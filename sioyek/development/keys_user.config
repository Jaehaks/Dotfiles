# CAUTION: don't let comment beside of setting chunk
command ;

############ page movement #############
move_down k
move_up j
move_right h
move_left l

# -- pages
# move half page down
screen_down <C-d>
# move half page up
screen_up <C-u>
# move one page down
next_page <pagedown>
# move half page down
previous_page <pageup>
# prev in scroll history
prev_state H
# next in scroll history
next_state L
# <num>G 			   # go to number page

# -- chapter, it has some bug
next_chapter gc
prev_chapter gC

# -- list
# show table of contents
goto_toc to
# show opened window list and go
goto_window tw
# toggle dark mode
toggle_dark_mode td
# toggle presentation mode, it shows per page, not +,-
toggle_presentation_mode tp
# toggle two page mode
toggle_two_page_mode t2
# toggle helper window for portal
toggle_one_window th
toggle_one_window <f12>

# -- window
# duplicate current window
new_window T

# -- ruler mode
# `:toggle_visual_scroll` means that you can move visual mark using mouse.
# it is set by <f7>, after you turn on visual marks using 'V', and :toggle_visual_scroll,
# then [visual_scroll] will be shown in status bar.
# then you can move visual marks anywhere by rotating mouse wheel.

############ rotate #############
rotate_clockwise <C-r>
rotate_counterclockwise <C-S-r>

############ zoom #############
zoom_in +
zoom_out -
# -- fit screen by page with
fit_to_page_width =
# -- fit screen by page contents
fit_to_page_width_smart 0
# -- fit screen by page height, one page
fit_to_page_height |
toggle_fullscreen <f11>




############ mark/bookmark #############
# -- mark for scroll location (local)
set_mark m
goto_mark '

# -- bookmark
# bookmark with name in current file
add_bookmark b
# delete bookmark from current location
delete_bookmark db
# show bookmarks format : name [page]
goto_bookmark gb
# show bookmarks for all files which is registered
goto_bookmark_g gB

# -- highlight
# add background color with e'a-z'
add_highlight e
change_highlight ce
add_annot_to_selected_highlight ae
delete_highlight de
goto_highlight ge
goto_highlight_g gE
# show marks on where hyperlink is located
# It is not related with add_highlight list
toggle_highlight te




############ file #############
# open file using embedded file browser
open_document_embedded_from_current_path o
# show list of opened documents before
open_prev_doc O
close_window q
quit <C-S-w>







############ editing #############
# visual select some word/sentence, and copy them
copy y

# visual select some word only using keyboard shortcut
# '/' after visual select, the word is filled first
keyboard_select v




############ smart jump #############
# smart_jump/overview is operation to detect proper reference
# smart_jump = go to the page location which is referenced / if there are not, search in web
# overview = show part of the page location which is referenced using partial window (ESC to exit) / if there are not, do nothing
# if Fig. 8 / Table 16 format / equation (2.1) : it must have hyper link. not work on plain text
# [8] : paper reference, it works on plain text
# Figure 2.1 : figure reference, it works on plain text

# put 'f' under mouse cursor, go to the reference page
# caution: if the cursor is not on link like [2], Fig.2,  open web browser to search the word
smart_jump_under_cursor f
# 'f' using keyboard
keyboard_smart_jump F
# 'f' show in floating window without going to the page.
overview_under_cursor w
# like 'F' for 'w'
keyboard_overview W
# show previous overview
previous_overview <C-p>
# show next overview
next_overview <C-n>
zoom_in_overview <C-+>
zoom_out_overview <C-_>
close_overview <C-e>

############ portal #############
# INFO: How to?
# portal window can be opened using :toggle_one_window or :toggle_window_configuration
# :toggle_one_window does just opening helper window, the window setting is preserved by previous state.
# :toggle_window_configuration does opens helper window but restore two window settings
#
# -- assumption
# 1) helper window is for portal which is linked page with one of main view.
# 2) helper window can be scroll using mouse wheel but not keyboard.
# 3) because it is just show screen which is linked with current page.
# 4) so the portal page brings the screen state of the main view as it is. (zoom)
# 5) fortunately, you can directly adjust the zoom state with <ctrl> + mouse
# 6) portal links scroll to scroll, not sentence or items(Fig) like overview.
#    It can be current page scroll or other file page. Multiple portals can be set in one page.
#
# -- make portal
# open helper window using `:toggle_one_window`
# you can see that there are nothing in helper window. Because there are not portal.
# you need to add portal to current page using 'p'.
# After pressing 'p', then [linking...] message will be displayed in status bar.
# move focus to other page what you want to see through helper window.
# you can zoom in/out to indicate specific part of page. After then, press 'p' again.
# then the [linking...] is gone and the part of page is shown in helper window.
# exactly, the part of page is shown when you move focus to a page what you press 'p' at first.
# It means that the page where you press 'p' first and page where you press 'p' last are linked together.
# and you can see in helper window.
#
# -- delete portal
# If you set wrong portal, focus the page of main view and press 'dp'
# If will remove portal.
# you can see whether this page has portal in status bar. [PORTAL] statement will be shown.
# because I set `show_close_portal_in_statusbar 1` in pref_user.config.
#
# -- editing portal
# you can modify destination portal.
# press 'P' in page of main view where you want to modify destination portal.
# then your focus will be moved to the destination portal you set before.
# [editing link ...] will be shown in status bar.
# move focus to other page where you want to set as new destination portal.
# press <BS>, then the focus moves to source page where you start with modifying destination portal.



############ visual mark #############
enter_visual_mark_mode V
# move visual mark in visual mark mode
move_visual_mark_up j
move_visual_mark_down k
visual_mark_under_cursor gv
# smart jump from visual mark
goto_definition gd
# move visual mark to searched text
focus_text f

############ execute command #############
# `execute_predefined_command` is replaced with new_command
# Previously, `execute_predefined_command` is needed as prefix to execute custom command
# the custom command is defined by `execute_command_x` in pref_user.config
# Now, new_command is supported and you can set any keymap to the custom command without prefix setting
# It is more useful than 'external_search' because It can select browser command
# It you want to search using mouse, select them and executes these custom command
#
# custom commands
_open_key_config 		sk
_open_pref_config 		sp
_search_google 			sg
_search_naver_dict 		sd
_search_scholar_google 	ss
_search_youtube 		sr

############ command #############
# :keys_user - open keymapping config file
# :prefs_user - open preference config file
